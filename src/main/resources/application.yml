spring:
  application:
    name: spotify-wrapped
  jackson:
    serialization:
      indent-output: true
    default-property-inclusion: non_null
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=300s
    cache-names:
      - topTracks
      - topArtists
  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id: ${SPOTIFY_CLIENT_ID:}
            client-secret: ${SPOTIFY_CLIENT_SECRET:}
            scope:
              - user-top-read
              - user-read-recently-played
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Spotify
        provider:
          spotify:
            authorization-uri: https://accounts.spotify.com/authorize
            token-uri: https://accounts.spotify.com/api/token
            user-info-uri: https://api.spotify.com/v1/me
            user-name-attribute: id

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
  compression:
    enabled: true
    mime-types:
      - application/json
      - application/xml
      - text/html
      - text/xml
      - text/plain
    min-response-size: 1024

spotify:
  api:
    base-url: https://api.spotify.com/v1
    auth-url: https://accounts.spotify.com/api/token
    client-id: ${SPOTIFY_CLIENT_ID:}
    client-secret: ${SPOTIFY_CLIENT_SECRET:}
    default-limit: 5

logging:
  level:
    org.adarssh: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{correlationId:-NO-CORRELATION-ID}] - %msg%n"

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

# Application Info (for /actuator/info)
info:
  app:
    name: Spotify Wrapped API
    description: A modern REST API to access your Spotify listening habits
    version: 1.0.0
    java-version: ${java.version}

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: alpha
    tags-sorter: alpha
    display-request-duration: true
    doc-expansion: none

# Resilience4j Configuration
resilience4j:
  retry:
    instances:
      spotifyApi:
        max-attempts: 3
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.io.IOException
  circuitbreaker:
    instances:
      spotifyApi:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 10s
        automatic-transition-from-open-to-half-open-enabled: true
